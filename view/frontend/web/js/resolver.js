define([],function(){let r={prerender:!1,delay:0,el:document.body,limit:1/0,threshold:0,throttle:1/0,timeout:2e3,priority:!1,origins:[location.hostname],ignores:[]},t=e=>e.replace(/\[([^\[\]]*)\]/g,".$1.").split(".").filter(Boolean).reduce((e,o)=>e&&e[o],window),o=e=>{var o=t(e)||document.querySelector(e);return o instanceof Element?o:(console.warn("Failed to convert options.el",e,", so using default HTMLElement document.body"),r.el)},n=e=>Array.isArray(e)?e.map(e=>t(e)||e):(console.warn("Failed to convert options.origins",e,", so using default origins [location.hostname]"),r.origins),i=e=>Array.isArray(e)?[o=>e.some(e=>o.includes(e)),(e,o)=>o.hasAttribute("noprefetch")]:(console.warn("Failed to convert options.ignores",e,", so using default ignores []"),r.ignores),s=e=>{var o;return"string"!=typeof e?e:(o=parseFloat(e),isNaN(o)?t(e):o)};return e=>{let r={el:o,origins:n,ignores:i,default:s};return Object.fromEntries(Object.entries(e).map(([e,o])=>[e,(r[e]||r.default)(o)]))}});